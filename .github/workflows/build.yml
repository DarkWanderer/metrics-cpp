name: Build

on:
  workflow_call:
    inputs:
      conf:
        default: release
        required: false
        type: string
      os:
        default: ubuntu
        required: false
        type: string
      arch:
        default: x64
        required: false
        type: string
      artifacts:
        default: false
        required: false
        type: boolean

jobs:
  build:
    name: Build

    runs-on: ${{ inputs.os }}-latest

    steps:
      - name: Export variables for vcpkg
        uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - uses: actions/checkout@v4

      - uses: ammaraskar/msvc-problem-matcher@master # Report MSVC compiler errors

      - uses: ammaraskar/gcc-problem-matcher@master # Report GCC compiler errors

      - uses: lukka/get-cmake@latest # Set up latest cmake/Ninja

      - uses: lukka/run-vcpkg@v11 # Set up vcpkg and install dependencies
        with:
          runVcpkgInstall: true
        env:
          VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

      - name: Set preset name
        id: preset
        shell: bash
        run: echo "name=${{ inputs.os }}-${{ inputs.arch }}-${{ inputs.conf }}" | sed s/ubuntu/linux/ >> $GITHUB_OUTPUT

      - name: Set up Windows compiler
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ inputs.arch }}

      - name: Configure
        run: cmake --preset ${{ steps.preset.outputs.name }}

      - name: Build
        run: cmake --build --preset ${{ steps.preset.outputs.name }}

      - name: Test
        run: ctest --timeout 5 --preset ${{ steps.preset.outputs.name }}

      - name: Install
        if: ${{ inputs.artifacts }}
        run: cmake --install out/build/${{ steps.preset.outputs.name }} --prefix out/install/${{ steps.preset.outputs.name }}

      - name: Tar
        if: ${{ inputs.artifacts }}
        working-directory: out/install/${{ steps.preset.outputs.name }}
        run: tar -czf ${{ github.workspace }}/${{ steps.preset.outputs.name }}.tar.gz .

      - name: Upload artifact
        if: ${{ inputs.artifacts }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.preset.outputs.name }}
          path: ${{ steps.preset.outputs.name }}.tar.gz
